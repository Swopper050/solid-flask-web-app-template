name: 

on:
  push:
    branches:
      - main
    tags: 
      - 'v[0-9].[0-9]+.[0-9]+'


jobs:
  docker-api-stable-build-push:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Setup
        uses: actions/checkout@v4

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image
        run: cd api && make DOCKERHUB_NAMESPACE=${{ secrets.DOCKERHUB_NAMESPACE }} docker_api_stable

      - name: Push docker image
        run: cd api && make DOCKERHUB_NAMESPACE=${{ secrets.DOCKERHUB_NAMESPACE }} docker_push_api_stable

  docker-tasks-stable-build-push:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Setup
        uses: actions/checkout@v4

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image
        run: cd api && make DOCKERHUB_NAMESPACE=${{ secrets.DOCKERHUB_NAMESPACE }} docker_tasks_stable

      - name: Push docker image
        run: cd api && make DOCKERHUB_NAMESPACE=${{ secrets.DOCKERHUB_NAMESPACE }} docker_push_tasks_stable

  docker-ui-stable-build-push:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Setup
        uses: actions/checkout@v4

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image
        run: cd ui && make DOCKERHUB_NAMESPACE=${{ secrets.DOCKERHUB_USERNAME }} docker_stable

      - name: Push docker image
        run: cd ui && make DOCKERHUB_NAMESPACE=${{ secrets.DOCKERHUB_NAMESPACE }} docker_push_stable

  deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
    needs: [docker-ui-stable-build-push, docker-api-stable-build-push]
    steps:
      - name: Setup
        uses: actions/checkout@v4

      - name: SCP new docker compose file 
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.MY_SOLID_APP_VPS_HOST }}
          username: ${{ secrets.MY_SOLID_APP_VPS_USER }}
          port: ${{ secrets.MY_SOLID_APP_VPS_PORT }}
          key: ${{ secrets.MY_SOLID_APP_VPS_SSH_KEY }}
          source: 'docker-compose.prod.yml, nginx.prod.conf'
          target: '~/'

      - name: Deploy new docker containers 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MY_SOLID_APP_VPS_HOST }}
          username: ${{ secrets.MY_SOLID_APP_VPS_USER }}
          port: ${{ secrets.MY_SOLID_APP_VPS_PORT }}
          key: ${{ secrets.MY_SOLID_APP_VPS_SSH_KEY }}
          script: |
            export MY_SOLID_APP_SERVER_USER=${{ secrets.MY_SOLID_APP_VPS_USER }}
            export DOCKERHUB_NAMESPACE=${{ secrets.DOCKERHUB_NAMESPACE }}
            export MY_SOLID_APP_DB_NAME=${{ secrets.MY_SOLID_APP_DB_NAME }}
            export MY_SOLID_APP_DB_USER=${{ secrets.MY_SOLID_APP_DB_USER }}
            export MY_SOLID_APP_DB_PASSWORD=${{ secrets.MY_SOLID_APP_DB_PASSWORD }}
            export MY_SOLID_APP_SECRET_KEY=${{ secrets.MY_SOLID_APP_SECRET_KEY }}
            export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            export MYSQL_DATABASE=${{ secrets.MY_SOLID_APP_DB_NAME }}
            export MYSQL_USER=${{ secrets.MY_SOLID_APP_DB_USER }}
            export MYSQL_PASSWORD=${{ secrets.MY_SOLID_APP_DB_PASSWORD }}
            export MY_SOLID_APP_MAIL_SERVER=${{ secrets.MY_SOLID_APP_MAIL_SERVER }}
            export MY_SOLID_APP_MAIL_PORT=${{ secrets.MY_SOLID_APP_MAIL_PORT }}
            export MY_SOLID_APP_MAIL_USERNAME=${{ secrets.MY_SOLID_APP_MAIL_USERNAME }}
            export MY_SOLID_APP_MAIL_PASSWORD=${{ secrets.MY_SOLID_APP_MAIL_PASSWORD }}
            export MY_SOLID_APP_MAIL_DEFAULT_SENDER=${{ secrets.MY_SOLID_APP_MAIL_DEFAULT_SENDER }}
            export MY_SOLID_APP_FERNET_SECRET_KEY=${{ secrets.MY_SOLID_APP_FERNET_SECRET_KEY }}

            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
            sleep 10
            docker compose -f docker-compose.prod.yml run api make db_upgrade
            sleep 5
            docker image prune -af
