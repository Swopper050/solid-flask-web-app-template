import { createSignal, onMount, JSXElement, Show } from 'solid-js'
import api from '../api'
import { clsx } from 'clsx'
import { useUser } from '../context'

export function Enable2FAModal(): JSXElement {
  const { fetchUser } = useUser()

  const [totpSecret, setTotpSecret] = createSignal<string | null>(null)
  const [totpCode, setTotpCode] = createSignal('')
  const [qrCode, setQrCode] = createSignal<string | null>(null)

  const [submitting, setSubmitting] = createSignal(false)
  const [errorMsg, setErrorMsg] = createSignal<string | null>(null)

  let setup2faModalRef: HTMLDialogElement | undefined

  const fetchQRCode = async () => {
    api.get('/generate_2fa_secret').then((response) => {
      setQrCode(response.data.qr_code)
      setTotpSecret(response.data.totp_secret)
    })
  }

  const setup2fa = async () => {
    setErrorMsg(null)
    setSubmitting(true)

    api
      .post('/enable_2fa', { totp_code: totpCode(), totp_secret: totpSecret() })
      .then(async () => {
        await fetchUser()
        setup2faModalRef?.close()
      })
      .catch((error) => {
        setErrorMsg(
          error.response.data.error_message ??
            'Could not setup 2FA. Please try again later.'
        )
      })
      .finally(() => {
        setSubmitting(false)
      })
  }

  onMount(() => {
    fetchQRCode()
  })

  return (
    <dialog ref={setup2faModalRef} id="enable_2fa_modal" class="modal">
      <div class="modal-box">
        <form method="dialog">
          <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-6">
            âœ•
          </button>
        </form>

        <div>
          <h3 class="font-bold text-lg">
            Step 1: Scan QR code with your authenticator app
          </h3>

          <div class="my-8 flex justify-center">
            <img
              src={`data:image/png;base64,${qrCode()}`}
              alt="TOTP QR Code"
              width="50%"
            />
          </div>

          <div class="flex justify-center">
            <button
              class="btn btn-primary btn-sm btn-outline"
              onClick={fetchQRCode}
            >
              <i class="fas fa-undo mr-2" />
              Regenerate QR code
            </button>
          </div>
        </div>

        <div class="mt-20">
          <h3 class="font-bold text-lg">
            Step 2: Verify the setup by filling in the 2FA code
          </h3>
          <p class="py-4">
            Enter the 6-digit code generated by your authenticator app.
          </p>

          <input
            type="text"
            class="input input-bordered w-full"
            placeholder=""
            value={totpCode()}
            onInput={(e) => setTotpCode(e.target.value)}
          />

          <Show when={errorMsg() !== null}>
            <div role="alert" class="alert alert-error mt-6">
              <span>{errorMsg()}</span>
            </div>
          </Show>

          <div class="modal-action">
            <button
              class={clsx('btn', 'btn-primary', submitting() && 'btn-disabled')}
              onClick={setup2fa}
            >
              <Show when={submitting()}>
                <span class="loading loading-spinner" />
              </Show>
              Enable 2FA
            </button>
          </div>
        </div>
      </div>
    </dialog>
  )
}
